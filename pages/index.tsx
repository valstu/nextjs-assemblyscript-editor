import { useEffect, useState, useRef } from "react";
import type { NextPage } from "next";
import Head from "next/head";
import Editor from "@monaco-editor/react";
import type { editor } from "monaco-editor";

const Home: NextPage = () => {
  const [compiled, setCompiled] = useState<string | null | undefined>();
  const ascRef =
    useRef<
      typeof import("/Users/valtterikaresto/Desktop/nvf-projects/equilibrium/xrpl/next-with-asc/node_modules/assemblyscript/dist/asc")
    >();
  const editorRef = useRef<editor.IStandaloneCodeEditor>();
  const compile = async (SOURCE?: string) => {
    if (!SOURCE) {
      return;
    }
    const value = await ascRef.current?.compileString(SOURCE);
    console.log("ss", SOURCE, value);
    setCompiled(value?.text);
  };
  useEffect(() => {
    const ok = async () => {
      const SOURCE_CODE = `export function test(): void {}`;
      const asc = await import("assemblyscript/dist/asc");
      ascRef.current = asc;
    };
    ok();
  }, []);
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main
        style={{ minHeight: "100vh", display: "flex", flexDirection: "column" }}
      >
        <h1>Compiling AssemblyScript on browser with Next.js</h1>
        <div style={{ display: "flex" }}>
          <Editor
            width={"50%"}
            height={400}
            defaultValue="export function test(): void {}"
            onMount={(editor) => {
              if (!editorRef.current) {
                editorRef.current = editor;
              }
            }}
          />
          <div>
            <button
              onClick={() => {
                compile(editorRef.current?.getModel()?.getValue());
              }}
            >
              compile
            </button>
            <pre>
              <code>{compiled}</code>
            </pre>
          </div>
        </div>
      </main>
    </div>
  );
};

export default Home;
